@using GestionPersonnel.Models.Avances
@using GestionPersonnel.Models.Dettes
@using GestionPersonnel.Models.Employe
@using GestionPersonnel.Services
@inject IEmployeService EmployeService
@inject IDetteService DetteService
@inject IAvanceService AvanceService

<div class="modal-overlay" style="@DisplayStyle">
    <div class="modal-content">
        <span class="close-btn" @onclick="ClosePopup">&times;</span>
        <h3>Mise à Jour de Montant Retiré</h3>

        <!-- Tables for Avance and Dette -->
        <div class="popup-table-container">
            <!-- Left Table: Avance -->
            <div class="table-container left-table">
                <h4>Avance</h4>
                @if (avances != null && avances.Count > 0)
                {
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Avance ID</th>
                                <th>Date</th>
                                
                                <th>Montant</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var avance in avances)
                            {
                                <tr>
                                    <td>@avance.AvanceID</td>
                                    <td>@avance.Date</td>
                                  
                                    <td>@avance.Montant</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                else
                {
                    <p>Aucune avance disponible</p>
                }
            </div>

            <!-- Right Table: Dette -->
            <div class="table-container right-table">
                <h4>Dette</h4>
                @if (dettes != null && dettes.Count > 0)
                {
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Dette ID</th>
                               
                                <th>Date</th>
                                <th>Montant</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var dette in dettes)
                            {
                                <tr>
                                    <td>@dette.DetteID</td>
                                   
                                    <td>@dette.Date</td>
                                    <td>@dette.Montant</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                else
                {
                    <p>Aucune dette disponible</p>
                }
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] public bool IsVisible { get; set; }
    [Parameter] public EventCallback OnClose { get; set; }
    [Parameter] public int EmployeID { get; set; }

    private List<Employe> employes;
    private List<Avance> avances;
    private List<Dette> dettes;

    private string DisplayStyle => IsVisible ? "display: flex;" : "display: none;";

    protected override async Task OnParametersSetAsync()
    {
        if (EmployeID > 0)
        {
            await LoadAvancesAndDettes();
        }
    }

    private async Task LoadAvancesAndDettes()
    {
        try
        {
            avances = await AvanceService.GetByEmployeIdAsync(EmployeID);
            dettes = await DetteService.GetByEmployeIdAsync(EmployeID);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading data: {ex.Message}");
        }
    }

    private async Task ClosePopup()
    {
        if (OnClose.HasDelegate)
            await OnClose.InvokeAsync();
    }

}
<style>
    .popup-table-container {
        display: flex;
        justify-content: space-between;
        gap: 20px;
    }

    .table-container {
        width: 48%; 
        overflow-x: auto; 
    }

    .left-table {
      
    }

    .right-table {
        
    }

    .table {
        width: 100%;
        border-collapse: collapse;
    }

        .table th, .table td {
            padding: 10px;
            text-align: left;
            border: 1px solid #ddd;
        }

        .table th {
            background-color: #f4f4f4;
        }

    .table-container h4 {
        text-align: center;
        margin-bottom: 10px;
    }

</style>